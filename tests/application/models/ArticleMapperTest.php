<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-15 at 21:46:09.
 */
class ArticleMapperTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var ArticleMapper
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ArticleMapper(_getDb());
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers ArticleMapper::getArticles
     * @todo   Implement testGetArticles().
     */
    public function testGetArticles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ArticleMapper::find
     * @todo   Implement testFind().
     */
    public function testFind()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ArticleMapper::create
     * @todo   Implement testCreate().
     */
    public function testCreate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ArticleMapper::update
     * @todo   Implement testUpdate().
     */
    public function testUpdate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ArticleMapper::search
     * @dataProvider searchProvider
     */
    public function testSearch($search)
    {
        $result = $this->object->search($search);
        var_dump($result);
    }
    
    public function searchProvider()
    {
        $data = array();
        
        $data[] = array('bonb');
        $data[] = array('bonbo');
        $data[] = array('bonbon');
        $data[] = array('suce');
        $data[] = array('sucet');
        $data[] = array('sucett');
        $data[] = array('sucette');
        
        return $data;
    }

}
